/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/NLi39JXvjLp
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */
import {AvatarImage, AvatarFallback, Avatar} from "@/components/ui/avatar"
import {TableHead, TableRow, TableHeader, TableCell, TableBody, Table} from "@/components/ui/table"
import {SVGProps, useEffect, useState} from "react";
import {Link} from "react-router-dom";
import {JSX} from "react/jsx-runtime";
import {DietPlan, Pet} from "@/lib/types.ts";
import {supabase} from "@/lib/supabase.ts";
import AddDietPlanModal from "@/components/add-diet-plan-modal.tsx";

type Props = {
  id: string
}

export function SlugTable(props: Props) {

  const [pet, setPet] = useState<Pet>();
  const [dietPlans, setDietPlans] = useState<DietPlan[]>();

  useEffect(() => {
    async function getPet() {
      const response = await supabase
        .from('pets')
        .select('*')
        .eq('id', props.id)
        .single();

      console.log(response.data)

      setPet(response.data as Pet)
    }

    async function getDietPlans() {
      const response = await supabase
        .from('diet_plans')
        .select('*')
        .eq('pet_id', props.id);

      console.log(response.data)

      setDietPlans(response.data as DietPlan[])
    }

    getPet().then(() => {})
    getDietPlans().then(() => {})
  }, [props.id])

  return (
    <div key="1" className="flex flex-col items-center justify-center p-6">
      <div className="flex flex-col w-full max-w-6xl bg-white rounded-lg shadow p-6 space-y-6">
        <Link
          className="inline-flex items-center gap-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50"

          to="/u/pets">
          <ArrowLeftIcon className="h-4 w-4"/>
          Back
        </Link>
        <div className="flex justify-center gap-6">
          <div className="grid grid-cols-3 items-center">
            <Avatar style={{
              width: '150px',
              height: '150px',
            }}>
              <AvatarImage alt="Pet" src={pet?.pet_image}/>
              <AvatarFallback>PET</AvatarFallback>
            </Avatar>
            <div className="space-y-2">
              <h2 className="text-2xl font-bold">{pet?.pet_name}</h2>
              <p className="text-gray-600">Breed: {pet?.breed}</p>
            </div>
            <div className="space-y-2">
              <p className="text-gray-600">Age: {pet?.age} years old</p>
              <p
                className="text-gray-600">Added: {pet?.created_at ? new Date(pet.created_at).toLocaleString() : 'N/A'}</p>
            </div>
          </div>
        </div>
        <div className="flex flex-col w-full">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-xl font-semibold">Diet Plans</h3>
            <AddDietPlanModal petId={pet?.id}/>
          </div>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead className="w-1/5">Date</TableHead>
                <TableHead className="w-1/5">Weight (in kg)</TableHead>
                <TableHead className="w-1/5">Food Type</TableHead>
                <TableHead className="w-1/5">Suggested Calorie Intake</TableHead>
                <TableHead className="w-1/5">Notes</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {dietPlans?.length === 0 && (
                <div className="flex items-center justify-center h-12">
                  <p className="text-gray-500 dark:text-gray-400">No diet plans found</p>
                </div>
              )}
              {dietPlans?.map((dietPlan) => (
                <TableRow key={dietPlan.id}>
                  <TableCell>{new Date(dietPlan.created_at).toLocaleString()}</TableCell>
                  <TableCell>{dietPlan.weight}</TableCell>
                  <TableCell>{dietPlan.food_type}</TableCell>
                  <TableCell>{dietPlan.calorie}</TableCell>
                  <TableCell>{dietPlan.remarks}</TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>
      </div>
    </div>
  )
}

function ArrowLeftIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m12 19-7-7 7-7"/>
      <path d="M19 12H5"/>
    </svg>
  )
}
